#!/bin/bash

# Script de inicio para Sistema POS
# Espera a que la base de datos est√© disponible antes de iniciar la aplicaci√≥n

set -e

echo "üöÄ Iniciando Sistema POS..."

# Funci√≥n para esperar a que PostgreSQL est√© disponible
wait_for_postgres() {
    echo "‚è≥ Esperando a que PostgreSQL est√© disponible..."
    
    # Extraer host y puerto de DATABASE_URL
    if [ -n "$DATABASE_URL" ]; then
        # Parsear DATABASE_URL para obtener host y puerto
        DB_HOST=$(echo $DATABASE_URL | sed -n 's/.*@\([^:]*\):.*/\1/p')
        DB_PORT=$(echo $DATABASE_URL | sed -n 's/.*:\([0-9]*\)\/.*/\1/p')
        
        if [ -z "$DB_HOST" ]; then
            DB_HOST="zimple_postgresql"
        fi
        if [ -z "$DB_PORT" ]; then
            DB_PORT="5432"
        fi
    else
        DB_HOST="zimple_postgresql"
        DB_PORT="5432"
    fi
    
    echo "üìç Conectando a PostgreSQL en $DB_HOST:$DB_PORT"
    
    # Esperar hasta que PostgreSQL est√© disponible
    until pg_isready -h "$DB_HOST" -p "$DB_PORT" -U sistema_pos_user; do
        echo "‚è≥ PostgreSQL no est√° listo a√∫n... esperando 5 segundos"
        sleep 5
    done
    
    echo "‚úÖ PostgreSQL est√° disponible!"
}

# Funci√≥n para ejecutar migraciones
run_migrations() {
    echo "üîÑ Ejecutando migraciones de base de datos..."
    
    # Verificar si alembic est√° disponible
    if command -v alembic &> /dev/null; then
        alembic upgrade head || echo "‚ö†Ô∏è  No se pudieron ejecutar las migraciones autom√°ticamente"
    else
        echo "‚ÑπÔ∏è  Alembic no est√° disponible, saltando migraciones"
    fi
}

# Funci√≥n para crear directorios necesarios
create_directories() {
    echo "üìÅ Creando directorios necesarios..."
    
    # Crear directorios si no existen
    mkdir -p uploads logs
    
    # Intentar cambiar permisos solo si es posible
    if [ -w uploads ]; then
        chmod 755 uploads 2>/dev/null || echo "‚ÑπÔ∏è  No se pudieron cambiar permisos de uploads"
    fi
    
    if [ -w logs ]; then
        chmod 755 logs 2>/dev/null || echo "‚ÑπÔ∏è  No se pudieron cambiar permisos de logs"
    fi
    
    echo "‚úÖ Directorios creados/verificados"
}

# Funci√≥n principal
main() {
    # Crear directorios
    create_directories
    
    # Esperar a PostgreSQL
    wait_for_postgres
    
    # Ejecutar migraciones
    run_migrations
    
    echo "üéØ Iniciando aplicaci√≥n..."
    
    # Iniciar la aplicaci√≥n
    exec uvicorn app.main:app \
        --host 0.0.0.0 \
        --port 8000 \
        --workers 1 \
        --log-level info
}

# Ejecutar funci√≥n principal
main "$@"
